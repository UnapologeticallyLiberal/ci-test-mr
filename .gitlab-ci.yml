image: alpine:3.5

stages:
    - build
    - deploy

variables:
    SRC: "WebApplication1Core"
    REPO_NAME: "gitlab.com/ebsone/ci-test-mr"

build:
    stage: build
    before_script:
    - "cd $SRC"
    - "dotnet restore"
    script:
        - "dotnet build"
    artifacts:
        paths:
        - /builds/ebsone/ci-test-mr/WebApplication1Core/WebApplication1Core/bin/Debug/netcoreapp2.1/WebApplication1Core.dll
        - /builds/ebsone/ci-test-mr/WebApplication1Core/WebApplication1Core/bin/Debug/netcoreapp2.1/WebApplication1Core.Views.dll
    only:
    - /^v.*$/

docker:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  before_script:
  - "cd $SRC"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull registry.$REPO_NAME:build   || true
    - docker pull registry.$REPO_NAME:publish || true
    - docker pull registry.$REPO_NAME:latest  || true
    - docker build --target build --cache-from=registry.$REPO_NAME:build --tag registry.$REPO_NAME:build -f WebApplication1Core/Dockerfile .
    - docker build --target publish --cache-from=registry.$REPO_NAME:build --cache-from=registry.$REPO_NAME:publish --tag registry.$REPO_NAME:publish -f WebApplication1Core/Dockerfile .
    - docker build --target final --cache-from=registry.$REPO_NAME:build --cache-from=registry.$REPO_NAME:publish --cache-from=registry.$REPO_NAME:latest --tag registry.$REPO_NAME:latest -f WebApplication1Core/Dockerfile .
    - docker push registry.$REPO_NAME:build
    - docker push registry.$REPO_NAME:publish
    - docker push registry.$REPO_NAME:latest
